/// <reference path="../_variables.scss" />
/// <reference path="../_functions.scss" />
/// <reference path="../_mixins.scss" />

// stylelint-disable declaration-no-important

// Common values
@each $position in $positions {
  .position-#{$position} { position: $position !important; }
}


// top/bottom/start/end
@each $edge, $prop in (top: block-start, bottom: block-end, start: inline-start, end: inline-end) {
  @each $size in (0, 50, 100) {
    .#{$edge}-#{$size} { inset-#{$prop}: #{$size}% !important; }   
  }
}


// Translate

.translate-middle {
  transform: translate(-50%,-50%) !important
}

.translate-middle-x {
  transform: translateX(-50%) !important
}

.translate-middle-y {
  transform: translateY(-50%) !important
}

// Shorthand

.fixed-top {
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  z-index: $zindex-fixed;
}

.fixed-bottom {
  position: fixed;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: $zindex-fixed;
}

// Responsive sticky top and bottom
@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .sticky#{$infix}-top {
      position: sticky;
      top: 0;
      z-index: $zindex-sticky;
    }

    .sticky#{$infix}-bottom {
      position: sticky;
      bottom: 0;
      z-index: $zindex-sticky;
    }
  }
}
